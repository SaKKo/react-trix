{"mappings":";;;;;;;;AAoDO,MAAM,kDAAmB;IAK9B,YAAY,KAAsB,CAAE;QAClC,KAAK,CAAC;aAJA,YAAiB;aACjB,SAAiB;aACjB,IAAoB;QAI1B,IAAI,CAAC,KAAK,IAAI,CAAC;QAEf,IAAI,CAAC,QAAQ;YACX,eAAe;YACf,MAAM,EAAE;QACV;IACF;IACQ,aAAqB;QAC3B,IAAI,KAAK,IAAI,OAAO;QACpB,IAAI,OAAO,uCAAuC,QAAQ,SAAS,SAAS,CAAC;YACzE,IAAI,IAAI,AAAC,CAAA,KAAK,KAAK,WAAS,EAAC,IAAG,KAAK;YACrC,KAAK,KAAK,MAAM,KAAG;YACnB,OAAO,AAAC,CAAA,KAAG,MAAM,IAAI,IAAE,MAAI,GAAG,EAAG,SAAS;QAC9C;QACA,OAAO,MAAM;IACf;IACA,oBAAoB;QAClB,IAAI,QAAQ,IAAI,CAAC;QAEjB,IAAI,CAAC,YAAY,SAAS,eAAe,CAAC,OAAO,EAAE,IAAI,CAAC,GAAG,CAAC;QAC5D,wGAAwG;QACxG,uBAAuB;QACvB,IAAI,IAAI,CAAC,WAAW;YAClB,IAAI,CAAC,UAAU,iBAAiB,mBAAmB;gBACjD,IAAI,CAAC,SAAS,IAAI,CAAC,UAAU;gBAC7B,IAAI,CAAC,IAAI,CAAC,QACR,QAAQ,MAAM;gBAGhB,IAAI,MAAM,iBAAiB,OAAO,MAAM,iBAAiB,YACvD,MAAM,cAAc,IAAI,CAAC;YAE7B,GAAG;YACH,IAAI,CAAC,UAAU,iBAAiB,eAAe,IAAI,CAAC,aAAa,KAAK,IAAI,GAAG;YAE7E,IAAI,MAAM,WACR,IAAI,CAAC,UAAU,iBAAiB,uBAAuB,IAAI,CAAC,aAAa,KAAK,IAAI;QAEtF,OACE,QAAQ,MAAM;IAElB;IACA,uBAAuB;QACrB,IAAI,CAAC,UAAU,oBAAoB,mBAAmB,IAAI,CAAC;QAC3D,IAAI,CAAC,UAAU,oBAAoB,eAAe,IAAI,CAAC;QAEvD,IAAI,IAAI,CAAC,MAAM,WACb,IAAI,CAAC,UAAU,oBAAoB,uBAAuB,IAAI,CAAC;IAEnE;IACQ,aAAa,CAAC,EAAE;QACtB,MAAM,QAAQ,IAAI,CAAC;QACnB,IAAI,QAAyB,IAAI,CAAC;QAClC,MAAM,OAAe,EAAE,OAAO;QAE9B,IAAI,MAAM,UACR,MAAM,SAAS,EAAE,OAAO,WAAW;QAGrC,MAAM,QAAQ,IAAI,CAAC,OAAO;QAE1B,kCAAkC;QAClC,IAAI,QAAQ,KAAK,CAAC,EAAE,IAAI,KAAK,CAAC,EAAE,EAC9B,yCAAyC;QACzC;YAAA,IAAI,MAAM,WAAW;gBACnB,kFAAkF;gBAClF,MAAM,WAAW,KAAK,CAAC,EAAE,GAAG;gBAC5B,IAAI,YAAY,KAAK,WAAW,KAAK,QAAQ;oBAC3C,MAAM,UAAU,IAAI,CAAC,SAAS;oBAC9B,IAAK,IAAI,IAAI,GAAG,IAAI,MAAM,UAAU,QAAQ,IAC1C,IAAI,WAAW,MAAM,SAAS,CAAC,EAAE,CAAC,SAAS;wBACzC,MAAM,gBAAgB;wBACtB,MAAM,OAAO,MAAM,SAAS,CAAC,EAAE,CAAC;wBAChC,IAAI,CAAC,SAAS;wBACd;oBACF;gBAEJ;YACF;QAAA;IAEJ;IACQ,aAAa,CAAM,EAAE;QAC3B,IAAI,aAAa,EAAE;QACnB,IAAI,WAAW,MACb,OAAO,IAAI,CAAC,iBAAiB;IAEjC;IACQ,iBAAiB,UAAe,EAAE;QACxC,IAAI,MAAM,MAAM;QAChB,OAAO,WAAW;QAClB,OAAO,IAAI;QACX,uCAAuC;QACvC,IAAI,IAAI,CAAC,MAAM,YACb,IAAK,IAAI,KAAK,IAAI,CAAC,MAAM,WACvB,KAAK,OAAO,GAAG,IAAI,CAAC,MAAM,UAAU,CAAC,EAAE;QAI3C,qDAAqD;QACrD,KAAK,OAAQ,IAAI,CAAC,MAAM,iBAAiB,QAAS;QAClD,MAAM,IAAI;QACV,IAAI,KAAK,QAAQ,IAAI,CAAC,MAAM,WAAW;QACvC,IAAI,kBAAkB;QACtB,IAAI,OAAO,aAAa,CAAC;YACvB,IAAI,WAAW,MAAM,SAAS,MAAM,QAAQ;YAC5C,OAAO,WAAW,kBAAkB;QACtC;QACA,IAAI,SAAS;YACX,IAAI,MAAM;YACV,IAAI,IAAI,UAAU,OAAO,IAAI,SAAS,KAAK;gBACzC,MAAM,OAAO,IAAI;gBACjB,OAAO,WAAW,cAAc;oBAC9B,KAAK;oBACL,MAAM;gBACR;YACF;QACF;QACA,OAAO,IAAI,KAAK;IAClB;IACQ,kBAAkB,CAAW,EAAE,CAAsC,EAAQ;QACnF,EAAE;QAEF,IAAI,QAAyB,IAAI,CAAC;QAClC,MAAM,gBAAgB;QACtB,IAAI,CAAC,SAAS;QAEd,IAAI,CAAC,OAAO,2BAA2B;QACvC,IAAI,CAAC,OAAO,aAAa,EAAE;IAC7B;IACQ,kBAAkB,IAAqB,EAAmB;QAChE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QACjB,OAAO;QAGT,MAAM,iBAAiB,SAAS,eAAe,2BAA2B,IAAI,CAAC,IAAI;QAEnF,0BAA0B;QAC1B,MAAM,OAAO,IAAI,CAAC,OAAO,wBAAwB,IAAI,CAAC,OAAO,kBAAkB,CAAC,EAAE;QAClF,MAAM,WAAW;YACf,YAAY;YACZ,OAAO,KAAK,MAAM,KAAK,eAAe;YACtC,QAAQ,KAAK,OAAO,KAAK,eAAe;YACxC,SAAS;YACT,aAAa;YACb,WAAW;YACX,UAAU;YACV,mBAAmB;YACnB,gBAAgB;YAChB,cAAc;YACd,UAAU;YACV,aAAa;YACd,cAAc;QACf;QACA,MAAM,WAAW;YACf,WAAW;YACX,WAAW;YACX,UAAU;QACZ;QACA,qBACE,2BAAC;YAAI,OAAO;YAAU,WAAU;WAC7B,KAAK,IAAI,CAAC;YACT,qBAAO,2BAAC;gBAAE,KAAK,EAAE;gBAAM,OAAO;gBAAU,MAAK;gBAAI,SAAS,IAAI,CAAC,kBAAkB,KAAK,IAAI,EAAE;eAAK,EAAE;QACrG;IAGN;IACA,SAAS;QACP,IAAI,QAAyB,IAAI,CAAC;QAClC,IAAI,QAAQ,IAAI,CAAC;QAEjB,IAAI,aAAwC;YAC1C,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,GAAG,CAAC;YACzB,SAAS,CAAC,MAAM,EAAE,IAAI,CAAC,GAAG,CAAC;QAC7B;QAEA,IAAI,MAAM,WACR,UAAU,CAAC,QAAQ,GAAG,MAAM;QAG9B,IAAI,MAAM,WACR,UAAU,CAAC,YAAY,GAAG,MAAM,UAAU;QAG5C,IAAI,MAAM,aACR,UAAU,CAAC,cAAc,GAAG,MAAM;QAGpC,IAAI,MAAM,SACN,UAAU,CAAC,UAAU,GAAG,MAAM;QAGlC,IAAI,YAA6B;QACjC,IAAI,MAAM,eACR,YAAY,IAAI,CAAC,kBAAkB,MAAM;QAE3C,qBACE,2BAAC;YAAI,IAAI,2BAA2B,IAAI,CAAC;YAAI,KAAK,CAAC,IAAM,IAAI,CAAC,IAAI;YAAG,OAAO;gBAAE,YAAY;YAAW;yBAClG,2BAAoB,eAAe,2BACpC,2BAAC;YACC,MAAK;YACL,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,GAAG,CAAC;YACtB,OAAO,IAAI,CAAC,MAAM;YAEnB;IAGP;AACF","sources":["src/react-trix.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { BoxSizingProperty } from \"csstype\";\n\nexport interface MergeTag {\n  tag: string;\n  name: string;\n}\n\nexport interface MergeTags {\n  trigger: string;\n  tags: Array<MergeTag>;\n}\n\nexport interface TrixEditorProps {\n  className?: string;\n  autoFocus?: boolean;\n  placeholder?: string;\n  toolbar?: string;\n  value?: string;\n  uploadURL?: string;\n  uploadData?: { [key: string]: string };\n  fileParamName?: string;\n\n  /* list of available merge tag */\n  mergeTags: Array<MergeTags>;\n\n  onEditorReady?: (editor: any) => void;\n  onChange: (html: string, text: string) => void;\n}\n\nexport interface TrixEditorState {\n  showMergeTags: boolean;\n  tags: Array<MergeTag>;\n}\n\nexport interface Editor {\n  getSelectedRange: () => Array<number>;\n  setSelectedRange: (range: Array<number>) => void;\n  getClientRectAtPosition: (pos: number) => Rect;\n  expandSelectionInDirection: (direction: \"forward\" | \"backward\") => void;\n  insertString: (s: string) => void;\n}\n\nexport interface Rect {\n  top: number;\n  left: number;\n  right: number;\n  bottom: number;\n  width: number;\n  height: number;\n}\n\nexport class TrixEditor extends React.Component<TrixEditorProps, TrixEditorState> {\n  private id: string;\n  private container: any = null;\n  private editor: Editor = null;\n  private d: HTMLDivElement = null;\n  constructor(props: TrixEditorProps) {\n    super(props);\n\n    this.id = this.generateId();\n\n    this.state = {\n      showMergeTags: false,\n      tags: []\n    }\n  }\n  private generateId(): string {\n    let dt = new Date().getTime();\n    let uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n        let r = (dt + Math.random()*16)%16 | 0;\n        dt = Math.floor(dt/16);\n        return (c=='x' ? r :(r&0x3|0x8)).toString(16);\n    });\n    return \"T\" + uuid;\n  }\n  componentDidMount() {\n    let props = this.props;\n\n    this.container = document.getElementById(`editor-${this.id}`);\n    //this.container = this.d && this.d.children && this.d.children.length >= 2 ? this.d.children[1] : null;\n    //this.editor = this.d;\n    if (this.container) {\n      this.container.addEventListener(\"trix-initialize\", () => {\n        this.editor = this.container.editor;\n        if (!this.editor) {\n          console.error(\"cannot  find trix editor\");\n        }\n\n        if (props.onEditorReady && typeof props.onEditorReady == \"function\") {\n          props.onEditorReady(this.editor);\n        }\n      }, false);\n      this.container.addEventListener('trix-change', this.handleChange.bind(this), false);\n\n      if (props.uploadURL) {\n        this.container.addEventListener(\"trix-attachment-add\", this.handleUpload.bind(this));\n      }\n    } else {\n      console.error(\"editor not found\");\n    }\n  }\n  componentWillUnmount() {\n    this.container.removeEventListener(\"trix-initialize\", this.handleChange);\n    this.container.removeEventListener(\"trix-change\", this.handleChange);\n\n    if (this.props.uploadURL) {\n      this.container.removeEventListener(\"trix-attachment-add\", this.handleUpload);\n    }\n  }\n  private handleChange(e) {\n    const props = this.props;\n    let state: TrixEditorState = this.state;\n    const text: string = e.target.innerText;\n\n    if (props.onChange) {\n      props.onChange(e.target.innerHTML, text);\n    }\n\n    const range = this.editor.getSelectedRange();\n\n    // if we have a collapse selection\n    if (text && range[0] == range[1]) {\n      // if we have a merge tag mergeTagTrigger\n      if (props.mergeTags) {\n        // get the cursor position and compare the last character with our mergeTagTrigger\n        const lastChar = range[0] - 1;\n        if (lastChar >= 0 && lastChar < text.length) {\n          const trigger = text[lastChar];\n          for (let i = 0; i < props.mergeTags.length; i++) {\n            if (trigger == props.mergeTags[i].trigger) {\n              state.showMergeTags = true;\n              state.tags = props.mergeTags[i].tags;\n              this.setState(state);\n              break;\n            }\n          }\n        }\n      }\n    }\n  }\n  private handleUpload(e: any) {\n    var attachment = e.attachment;\n    if (attachment.file) {\n      return this.uploadAttachment(attachment);\n    }\n  }\n  private uploadAttachment(attachment: any) {\n    var file, form, xhr;\n    file = attachment.file;\n    form = new FormData();\n    // add any custom data that were passed\n    if (this.props.uploadData) {\n      for (var k in this.props.uploadData) {\n        form.append(k, this.props.uploadData[k]);\n      }\n    }\n    \n    //form.append(\"Content-Type\", \"multipart/form-data\");\n    form.append((this.props.fileParamName || \"file\"), file);\n    xhr = new XMLHttpRequest();\n    xhr.open(\"POST\", this.props.uploadURL, true);\n    xhr.withCredentials = true;\n    xhr.upload.onprogress = (event) => {\n      var progress = event.loaded / event.total * 100;\n      return attachment.setUploadProgress(progress);\n    };\n    xhr.onload = () => {\n      var href, url;\n      if (xhr.status >= 200 && xhr.status < 300) {\n        url = href = xhr.responseText;\n        return attachment.setAttributes({\n          url: url,\n          href: href\n        });\n      }\n    };\n    return xhr.send(form);\n  }\n  private handleTagSelected(t: MergeTag, e: React.MouseEvent<HTMLAnchorElement>): void {\n    e.preventDefault();\n\n    let state: TrixEditorState = this.state;\n    state.showMergeTags = false;\n    this.setState(state);\n\n    this.editor.expandSelectionInDirection(\"backward\");\n    this.editor.insertString(t.tag);\n  }\n  private renderTagSelector(tags: Array<MergeTag>): React.ReactNode {\n    if (!tags || !this.editor) {\n      return null;\n    }\n\n    const editorPosition = document.getElementById(\"trix-editor-top-level-\" + this.id).getBoundingClientRect();\n\n    // current cursor position\n    const rect = this.editor.getClientRectAtPosition(this.editor.getSelectedRange()[0]);\n    const boxStyle = {\n      \"position\": \"absolute\" as \"absolute\",\n      \"top\": rect.top + 25 - editorPosition.top,\n      \"left\": rect.left + 25 - editorPosition.left,\n      \"width\": \"250px\",\n      \"boxSizing\": \"border-box\" as BoxSizingProperty,\n      \"padding\": 0,\n      \"margin\": \".2em 0 0\",\n      \"backgroundColor\": \"hsla(0,0%,100%,.9)\",\n      \"borderRadius\": \".3em\",\n      \"background\": \"linear-gradient(to bottom right, white, hsla(0,0%,100%,.8))\",\n      \"border\": \"1px solid rgba(0,0,0,.3)\",\n      \"boxShadow\": \".05em .2em .6em rgba(0,0,0,.2)\",\n\t    \"textShadow\": \"none\"\n    };\n    const tagStyle = {\n      \"display\": \"block\",\n      \"padding\": \".2em .5em\",\n      \"cursor\": \"pointer\"\n    }\n    return (\n      <div style={boxStyle} className=\"react-trix-suggestions\">\n        {tags.map((t) => {\n          return <a key={t.name} style={tagStyle} href=\"#\" onClick={this.handleTagSelected.bind(this, t)}>{t.name}</a>\n        })}\n      </div>\n    );\n  }\n  render() {\n    let state: TrixEditorState = this.state;\n    let props = this.props;\n\n    var attributes: { [key: string]: string } = {\n      \"id\": `editor-${this.id}`,\n      \"input\": `input-${this.id}`\n    };\n\n    if (props.className) {\n      attributes[\"class\"] = props.className;\n    }\n\n    if (props.autoFocus) {\n      attributes[\"autofocus\"] = props.autoFocus.toString();\n    }\n\n    if (props.placeholder) {\n      attributes[\"placeholder\"] = props.placeholder;\n    }\n\n    if (props.toolbar) {\n        attributes[\"toolbar\"] = props.toolbar;\n    }\n\n    let mergetags: React.ReactNode = null;\n    if (state.showMergeTags) {\n      mergetags = this.renderTagSelector(state.tags);\n    }\n    return (\n      <div id={\"trix-editor-top-level-\" + this.id} ref={(d) => this.d = d} style={{ \"position\": \"relative\" }}>\n        {React.createElement(\"trix-editor\", attributes)}\n        <input\n          type=\"hidden\"\n          id={`input-${this.id}`}\n          value={this.props.value}\n        />\n        {mergetags}\n      </div>\n    );\n  }\n}\n"],"names":[],"version":3,"file":"main.js.map"}